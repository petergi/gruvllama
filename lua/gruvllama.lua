---@class Gruvllama
---@field config GruvllamaConfig
---@field palette GruvllamaPalette
local Gruvllama = {}

---@alias Contrast "hard" | "soft" | ""

---@class ItalicConfig
---@field strings boolean
---@field comments boolean
---@field operators boolean
---@field folds boolean
---@field emphasis boolean

---@class HighlightDefinition
---@field fg string?
---@field bg string?
---@field sp string?
---@field blend integer?
---@field bold boolean?
---@field standout boolean?
---@field underline boolean?
---@field undercurl boolean?
---@field underdouble boolean?
---@field underdotted boolean?
---@field strikethrough boolean?
---@field italic boolean?
---@field reverse boolean?
---@field nocombine boolean?

---@class GruvllamaConfig
---@field terminal_colors boolean?
---@field undercurl boolean?
---@field underline boolean?
---@field bold boolean?
---@field italic ItalicConfig?
---@field strikethrough boolean?
---@field contrast Contrast?
---@field invert_selection boolean?
---@field invert_signs boolean?
---@field invert_tabline boolean?
---@field invert_intend_guides boolean?
---@field inverse boolean?
---@field overrides table<string, HighlightDefinition>?
---@field palette_overrides table<string, string>?
Gruvllama.config = {
    terminal_colors = true,
    undercurl = true,
    underline = true,
    bold = true,
    italic = {
        strings = true,
        emphasis = true,
        comments = true,
        operators = false,
        folds = true
    },
    strikethrough = true,
    invert_selection = false,
    invert_signs = false,
    invert_tabline = false,
    invert_intend_guides = false,
    inverse = true,
    contrast = "",
    palette_overrides = {},
    overrides = {},
    dim_inactive = false,
    transparent_mode = false
}

-- main gruvllama color palette
---@class GruvllamaPalette
Gruvllama.palette = {
    dark0_hard = "#1d2021",
    dark0 = "#282828",
    dark0_soft = "#32302f",
    dark1 = "#3c3836",
    dark2 = "#504945",
    dark3 = "#665c54",
    dark4 = "#7c6f64",
    light0_hard = "#f9f5d7",
    light0 = "#fbf1c7",
    light0_soft = "#f2e5bc",
    light1 = "#ebdbb2",
    light2 = "#d5c4a1",
    light3 = "#bdae93",
    light4 = "#a89984",
    bright_red = "#fb4934",
    bright_green = "#b8bb26",
    bright_yellow = "#fabd2f",
    bright_blue = "#83a598",
    bright_purple = "#d3869b",
    bright_aqua = "#8ec07c",
    bright_orange = "#fe8019",
    neutral_red = "#cc241d",
    neutral_green = "#98971a",
    neutral_yellow = "#d79921",
    neutral_blue = "#458588",
    neutral_purple = "#b16286",
    neutral_aqua = "#689d6a",
    neutral_orange = "#d65d0e",
    faded_red = "#9d0006",
    faded_green = "#79740e",
    faded_yellow = "#b57614",
    faded_blue = "#076678",
    faded_purple = "#8f3f71",
    faded_aqua = "#427b58",
    faded_orange = "#af3a03",
    dark_red_hard = "#792329",
    dark_red = "#722529",
    dark_red_soft = "#7b2c2f",
    light_red_hard = "#fc9690",
    light_red = "#fc9487",
    light_red_soft = "#f78b7f",
    dark_green_hard = "#5a633a",
    dark_green = "#62693e",
    dark_green_soft = "#686d43",
    light_green_hard = "#d3d6a5",
    light_green = "#d5d39b",
    light_green_soft = "#cecb94",
    dark_aqua_hard = "#3e4934",
    dark_aqua = "#49503b",
    dark_aqua_soft = "#525742",
    light_aqua_hard = "#e6e9c1",
    light_aqua = "#e8e5b5",
    light_aqua_soft = "#e1dbac",
    gray = "#928374"
}

-- get a hex list of gruvllama colors based on current bg and constrast config
local function get_colors()
    local p = Gruvllama.palette
    local config = Gruvllama.config

    for color, hex in pairs(config.palette_overrides) do p[color] = hex end

    local bg = vim.o.background
    local contrast = config.contrast

    local color_groups = {
        dark = {
            bg0 = p.dark0,
            bg1 = p.dark1,
            bg2 = p.dark2,
            bg3 = p.dark3,
            bg4 = p.dark4,
            fg0 = p.light0,
            fg1 = p.light1,
            fg2 = p.light2,
            fg3 = p.light3,
            fg4 = p.light4,
            red = p.bright_red,
            green = p.bright_green,
            yellow = p.bright_yellow,
            blue = p.bright_blue,
            purple = p.bright_purple,
            aqua = p.bright_aqua,
            orange = p.bright_orange,
            neutral_red = p.neutral_red,
            neutral_green = p.neutral_green,
            neutral_yellow = p.neutral_yellow,
            neutral_blue = p.neutral_blue,
            neutral_purple = p.neutral_purple,
            neutral_aqua = p.neutral_aqua,
            dark_red = p.dark_red,
            dark_green = p.dark_green,
            dark_aqua = p.dark_aqua,
            gray = p.gray
        },
        light = {
            bg0 = p.light0,
            bg1 = p.light1,
            bg2 = p.light2,
            bg3 = p.light3,
            bg4 = p.light4,
            fg0 = p.dark0,
            fg1 = p.dark1,
            fg2 = p.dark2,
            fg3 = p.dark3,
            fg4 = p.dark4,
            red = p.faded_red,
            green = p.faded_green,
            yellow = p.faded_yellow,
            blue = p.faded_blue,
            purple = p.faded_purple,
            aqua = p.faded_aqua,
            orange = p.faded_orange,
            neutral_red = p.neutral_red,
            neutral_green = p.neutral_green,
            neutral_yellow = p.neutral_yellow,
            neutral_blue = p.neutral_blue,
            neutral_purple = p.neutral_purple,
            neutral_aqua = p.neutral_aqua,
            dark_red = p.light_red,
            dark_green = p.light_green,
            dark_aqua = p.light_aqua,
            gray = p.gray
        }
    }

    if contrast ~= nil and contrast ~= "" then
        color_groups[bg].bg0 = p[bg .. "0_" .. contrast]
        color_groups[bg].dark_red = p[bg .. "_red_" .. contrast]
        color_groups[bg].dark_green = p[bg .. "_green_" .. contrast]
        color_groups[bg].dark_aqua = p[bg .. "_aqua_" .. contrast]
    end

    return color_groups[bg]
end

local function get_groups()
    local colors = get_colors()
    local config = Gruvllama.config

    if config.terminal_colors then
        local term_colors = {
            colors.bg0, colors.neutral_red, colors.neutral_green,
            colors.neutral_yellow, colors.neutral_blue, colors.neutral_purple,
            colors.neutral_aqua, colors.fg4, colors.gray, colors.red,
            colors.green, colors.yellow, colors.blue, colors.purple,
            colors.aqua, colors.fg1
        }
        for index, value in ipairs(term_colors) do
            vim.g["terminal_color_" .. index - 1] = value
        end
    end

    local groups = {
        GruvllamaFg0 = {fg = colors.fg0},
        GruvllamaFg1 = {fg = colors.fg1},
        GruvllamaFg2 = {fg = colors.fg2},
        GruvllamaFg3 = {fg = colors.fg3},
        GruvllamaFg4 = {fg = colors.fg4},
        GruvllamaGray = {fg = colors.gray},
        GruvllamaBg0 = {fg = colors.bg0},
        GruvllamaBg1 = {fg = colors.bg1},
        GruvllamaBg2 = {fg = colors.bg2},
        GruvllamaBg3 = {fg = colors.bg3},
        GruvllamaBg4 = {fg = colors.bg4},
        GruvllamaRed = {fg = colors.red},
        GruvllamaRedBold = {fg = colors.red, bold = config.bold},
        GruvllamaGreen = {fg = colors.green},
        GruvllamaGreenBold = {fg = colors.green, bold = config.bold},
        GruvllamaYellow = {fg = colors.yellow},
        GruvllamaYellowBold = {fg = colors.yellow, bold = config.bold},
        GruvllamaBlue = {fg = colors.blue},
        GruvllamaBlueBold = {fg = colors.blue, bold = config.bold},
        GruvllamaPurple = {fg = colors.purple},
        GruvllamaPurpleBold = {fg = colors.purple, bold = config.bold},
        GruvllamaAqua = {fg = colors.aqua},
        GruvllamaAquaBold = {fg = colors.aqua, bold = config.bold},
        GruvllamaOrange = {fg = colors.orange},
        GruvllamaOrangeBold = {fg = colors.orange, bold = config.bold},
        GruvllamaRedSign = config.transparent_mode and
            {fg = colors.red, reverse = config.invert_signs} or
            {fg = colors.red, bg = colors.bg1, reverse = config.invert_signs},
        GruvllamaGreenSign = config.transparent_mode and
            {fg = colors.green, reverse = config.invert_signs} or
            {fg = colors.green, bg = colors.bg1, reverse = config.invert_signs},
        GruvllamaYellowSign = config.transparent_mode and
            {fg = colors.yellow, reverse = config.invert_signs} or
            {fg = colors.yellow, bg = colors.bg1, reverse = config.invert_signs},
        GruvllamaBlueSign = config.transparent_mode and
            {fg = colors.blue, reverse = config.invert_signs} or
            {fg = colors.blue, bg = colors.bg1, reverse = config.invert_signs},
        GruvllamaPurpleSign = config.transparent_mode and
            {fg = colors.purple, reverse = config.invert_signs} or
            {fg = colors.purple, bg = colors.bg1, reverse = config.invert_signs},
        GruvllamaAquaSign = config.transparent_mode and
            {fg = colors.aqua, reverse = config.invert_signs} or
            {fg = colors.aqua, bg = colors.bg1, reverse = config.invert_signs},
        GruvllamaOrangeSign = config.transparent_mode and
            {fg = colors.orange, reverse = config.invert_signs} or
            {fg = colors.orange, bg = colors.bg1, reverse = config.invert_signs},
        GruvllamaRedUnderline = {undercurl = config.undercurl, sp = colors.red},
        GruvllamaGreenUnderline = {
            undercurl = config.undercurl,
            sp = colors.green
        },
        GruvllamaYellowUnderline = {
            undercurl = config.undercurl,
            sp = colors.yellow
        },
        GruvllamaBlueUnderline = {
            undercurl = config.undercurl,
            sp = colors.blue
        },
        GruvllamaPurpleUnderline = {
            undercurl = config.undercurl,
            sp = colors.purple
        },
        GruvllamaAquaUnderline = {
            undercurl = config.undercurl,
            sp = colors.aqua
        },
        GruvllamaOrangeUnderline = {
            undercurl = config.undercurl,
            sp = colors.orange
        },
        Normal = config.transparent_mode and {fg = colors.fg1, bg = nil} or
            {fg = colors.fg1, bg = colors.bg0},
        NormalFloat = config.transparent_mode and {fg = colors.fg1, bg = nil} or
            {fg = colors.fg1, bg = colors.bg1},
        NormalNC = config.dim_inactive and {fg = colors.fg0, bg = colors.bg1} or
            {link = "Normal"},
        CursorLine = {bg = colors.bg1},
        CursorColumn = {link = "CursorLine"},
        TabLineFill = {
            fg = colors.bg4,
            bg = colors.bg1,
            reverse = config.invert_tabline
        },
        TabLineSel = {
            fg = colors.green,
            bg = colors.bg1,
            reverse = config.invert_tabline
        },
        TabLine = {link = "TabLineFill"},
        MatchParen = {bg = colors.bg3, bold = config.bold},
        ColorColumn = {bg = colors.bg1},
        Conceal = {fg = colors.blue},
        CursorLineNr = {fg = colors.yellow, bg = colors.bg1},
        NonText = {link = "GruvllamaBg2"},
        SpecialKey = {link = "GruvllamaFg4"},
        Visual = {bg = colors.bg3, reverse = config.invert_selection},
        VisualNOS = {link = "Visual"},
        Search = {fg = colors.yellow, bg = colors.bg0, reverse = config.inverse},
        IncSearch = {
            fg = colors.orange,
            bg = colors.bg0,
            reverse = config.inverse
        },
        CurSearch = {link = "IncSearch"},
        QuickFixLine = {fg = colors.bg0, bg = colors.yellow, bold = config.bold},
        Underlined = {fg = colors.blue, underline = config.underline},
        StatusLine = {
            fg = colors.bg2,
            bg = colors.fg1,
            reverse = config.inverse
        },
        StatusLineNC = {
            fg = colors.bg1,
            bg = colors.fg4,
            reverse = config.inverse
        },
        WinBar = {fg = colors.fg4, bg = colors.bg0},
        WinBarNC = {fg = colors.fg3, bg = colors.bg1},
        WinSeparator = config.transparent_mode and {fg = colors.bg3, bg = nil} or
            {fg = colors.bg3, bg = colors.bg0},
        WildMenu = {fg = colors.blue, bg = colors.bg2, bold = config.bold},
        Directory = {link = "GruvllamaBlueBold"},
        Title = {link = "GruvllamaGreenBold"},
        ErrorMsg = {fg = colors.bg0, bg = colors.red, bold = config.bold},
        MoreMsg = {link = "GruvllamaYellowBold"},
        ModeMsg = {link = "GruvllamaYellowBold"},
        Question = {link = "GruvllamaOrangeBold"},
        WarningMsg = {link = "GruvllamaRedBold"},
        LineNr = {fg = colors.bg4},
        SignColumn = config.transparent_mode and {bg = nil} or {bg = colors.bg1},
        Folded = {
            fg = colors.gray,
            bg = colors.bg1,
            italic = config.italic.folds
        },
        FoldColumn = config.transparent_mode and {fg = colors.gray, bg = nil} or
            {fg = colors.gray, bg = colors.bg1},
        Cursor = {reverse = config.inverse},
        vCursor = {link = "Cursor"},
        iCursor = {link = "Cursor"},
        lCursor = {link = "Cursor"},
        Special = {link = "GruvllamaOrange"},
        Comment = {fg = colors.gray, italic = config.italic.comments},
        Todo = {
            fg = colors.bg0,
            bg = colors.yellow,
            bold = config.bold,
            italic = config.italic.comments
        },
        Done = {
            fg = colors.orange,
            bold = config.bold,
            italic = config.italic.comments
        },
        Error = {fg = colors.red, bold = config.bold, reverse = config.inverse},
        Statement = {link = "GruvllamaRed"},
        Conditional = {link = "GruvllamaRed"},
        Repeat = {link = "GruvllamaRed"},
        Label = {link = "GruvllamaRed"},
        Exception = {link = "GruvllamaRed"},
        Operator = {fg = colors.orange, italic = config.italic.operators},
        Keyword = {link = "GruvllamaRed"},
        Identifier = {link = "GruvllamaBlue"},
        Function = {link = "GruvllamaGreenBold"},
        PreProc = {link = "GruvllamaAqua"},
        Include = {link = "GruvllamaAqua"},
        Define = {link = "GruvllamaAqua"},
        Macro = {link = "GruvllamaAqua"},
        PreCondit = {link = "GruvllamaAqua"},
        Constant = {link = "GruvllamaPurple"},
        Character = {link = "GruvllamaPurple"},
        String = {fg = colors.green, italic = config.italic.strings},
        Boolean = {link = "GruvllamaPurple"},
        Number = {link = "GruvllamaPurple"},
        Float = {link = "GruvllamaPurple"},
        Type = {link = "GruvllamaYellow"},
        StorageClass = {link = "GruvllamaOrange"},
        Structure = {link = "GruvllamaAqua"},
        Typedef = {link = "GruvllamaYellow"},
        Pmenu = {fg = colors.fg1, bg = colors.bg2},
        PmenuSel = {fg = colors.bg2, bg = colors.blue, bold = config.bold},
        PmenuSbar = {bg = colors.bg2},
        PmenuThumb = {bg = colors.bg4},
        DiffDelete = {bg = colors.dark_red},
        DiffAdd = {bg = colors.dark_green},
        DiffChange = {bg = colors.dark_aqua},
        DiffText = {bg = colors.yellow, fg = colors.bg0},
        SpellCap = {link = "GruvllamaBlueUnderline"},
        SpellBad = {link = "GruvllamaRedUnderline"},
        SpellLocal = {link = "GruvllamaAquaUnderline"},
        SpellRare = {link = "GruvllamaPurpleUnderline"},
        Whitespace = {fg = colors.bg2},
        DiagnosticError = {link = "GruvllamaRed"},
        DiagnosticSignError = {link = "GruvllamaRedSign"},
        DiagnosticUnderlineError = {link = "GruvllamaRedUnderline"},
        DiagnosticWarn = {link = "GruvllamaYellow"},
        DiagnosticSignWarn = {link = "GruvllamaYellowSign"},
        DiagnosticUnderlineWarn = {link = "GruvllamaYellowUnderline"},
        DiagnosticInfo = {link = "GruvllamaBlue"},
        DiagnosticSignInfo = {link = "GruvllamaBlueSign"},
        DiagnosticUnderlineInfo = {link = "GruvllamaBlueUnderline"},
        DiagnosticHint = {link = "GruvllamaAqua"},
        DiagnosticSignHint = {link = "GruvllamaAquaSign"},
        DiagnosticUnderlineHint = {link = "GruvllamaAquaUnderline"},
        DiagnosticFloatingError = {link = "GruvllamaRed"},
        DiagnosticFloatingWarn = {link = "GruvllamaOrange"},
        DiagnosticFloatingInfo = {link = "GruvllamaBlue"},
        DiagnosticFloatingHint = {link = "GruvllamaAqua"},
        DiagnosticVirtualTextError = {link = "GruvllamaRed"},
        DiagnosticVirtualTextWarn = {link = "GruvllamaYellow"},
        DiagnosticVirtualTextInfo = {link = "GruvllamaBlue"},
        DiagnosticVirtualTextHint = {link = "GruvllamaAqua"},
        DiagnosticOk = {link = "GruvllamaGreenSign"},
        LspReferenceRead = {link = "GruvllamaYellowBold"},
        LspReferenceText = {link = "GruvllamaYellowBold"},
        LspReferenceWrite = {link = "GruvllamaOrangeBold"},
        LspCodeLens = {link = "GruvllamaGray"},
        LspSignatureActiveParameter = {link = "Search"},
        gitcommitSelectedFile = {link = "GruvllamaGreen"},
        gitcommitDiscardedFile = {link = "GruvllamaRed"},
        GitSignsAdd = {link = "GruvllamaGreen"},
        GitSignsChange = {link = "GruvllamaAqua"},
        GitSignsDelete = {link = "GruvllamaRed"},
        NvimTreeSymlink = {fg = colors.neutral_aqua},
        NvimTreeRootFolder = {fg = colors.neutral_purple, bold = true},
        NvimTreeFolderIcon = {fg = colors.neutral_blue, bold = true},
        NvimTreeFileIcon = {fg = colors.light2},
        NvimTreeExecFile = {fg = colors.neutral_green, bold = true},
        NvimTreeOpenedFile = {fg = colors.bright_red, bold = true},
        NvimTreeSpecialFile = {
            fg = colors.neutral_yellow,
            bold = true,
            underline = true
        },
        NvimTreeImageFile = {fg = colors.neutral_purple},
        NvimTreeIndentMarker = {fg = colors.dark3},
        NvimTreeGitDirty = {fg = colors.neutral_yellow},
        NvimTreeGitStaged = {fg = colors.neutral_yellow},
        NvimTreeGitMerge = {fg = colors.neutral_purple},
        NvimTreeGitRenamed = {fg = colors.neutral_purple},
        NvimTreeGitNew = {fg = colors.neutral_yellow},
        NvimTreeGitDeleted = {fg = colors.neutral_red},
        NvimTreeWindowPicker = {bg = colors.aqua},
        debugPC = {bg = colors.blue},
        debugBreakpoint = {link = "GruvllamaRedSign"},
        StartifyBracket = {link = "GruvllamaFg3"},
        StartifyFile = {link = "GruvllamaFg1"},
        StartifyNumber = {link = "GruvllamaBlue"},
        StartifyPath = {link = "GruvllamaGray"},
        StartifySlash = {link = "GruvllamaGray"},
        StartifySection = {link = "GruvllamaYellow"},
        StartifySpecial = {link = "GruvllamaBg2"},
        StartifyHeader = {link = "GruvllamaOrange"},
        StartifyFooter = {link = "GruvllamaBg2"},
        StartifyVar = {link = "StartifyPath"},
        StartifySelect = {link = "Title"},
        DirvishPathTail = {link = "GruvllamaAqua"},
        DirvishArg = {link = "GruvllamaYellow"},
        netrwDir = {link = "GruvllamaAqua"},
        netrwClassify = {link = "GruvllamaAqua"},
        netrwLink = {link = "GruvllamaGray"},
        netrwSymLink = {link = "GruvllamaFg1"},
        netrwExe = {link = "GruvllamaYellow"},
        netrwComment = {link = "GruvllamaGray"},
        netrwList = {link = "GruvllamaBlue"},
        netrwHelpCmd = {link = "GruvllamaAqua"},
        netrwCmdSep = {link = "GruvllamaFg3"},
        netrwVersion = {link = "GruvllamaGreen"},
        NERDTreeDir = {link = "GruvllamaAqua"},
        NERDTreeDirSlash = {link = "GruvllamaAqua"},
        NERDTreeOpenable = {link = "GruvllamaOrange"},
        NERDTreeClosable = {link = "GruvllamaOrange"},
        NERDTreeFile = {link = "GruvllamaFg1"},
        NERDTreeExecFile = {link = "GruvllamaYellow"},
        NERDTreeUp = {link = "GruvllamaGray"},
        NERDTreeCWD = {link = "GruvllamaGreen"},
        NERDTreeHelp = {link = "GruvllamaFg1"},
        NERDTreeToggleOn = {link = "GruvllamaGreen"},
        NERDTreeToggleOff = {link = "GruvllamaRed"},
        CocErrorSign = {link = "GruvllamaRedSign"},
        CocWarningSign = {link = "GruvllamaOrangeSign"},
        CocInfoSign = {link = "GruvllamaBlueSign"},
        CocHintSign = {link = "GruvllamaAquaSign"},
        CocErrorFloat = {link = "GruvllamaRed"},
        CocWarningFloat = {link = "GruvllamaOrange"},
        CocInfoFloat = {link = "GruvllamaBlue"},
        CocHintFloat = {link = "GruvllamaAqua"},
        CocDiagnosticsError = {link = "GruvllamaRed"},
        CocDiagnosticsWarning = {link = "GruvllamaOrange"},
        CocDiagnosticsInfo = {link = "GruvllamaBlue"},
        CocDiagnosticsHint = {link = "GruvllamaAqua"},
        CocSelectedText = {link = "GruvllamaRed"},
        CocMenuSel = {link = "PmenuSel"},
        CocCodeLens = {link = "GruvllamaGray"},
        CocErrorHighlight = {link = "GruvllamaRedUnderline"},
        CocWarningHighlight = {link = "GruvllamaOrangeUnderline"},
        CocInfoHighlight = {link = "GruvllamaBlueUnderline"},
        CocHintHighlight = {link = "GruvllamaAquaUnderline"},
        TelescopeNormal = {link = "GruvllamaFg1"},
        TelescopeSelection = {link = "GruvllamaOrangeBold"},
        TelescopeSelectionCaret = {link = "GruvllamaRed"},
        TelescopeMultiSelection = {link = "GruvllamaGray"},
        TelescopeBorder = {link = "TelescopeNormal"},
        TelescopePromptBorder = {link = "TelescopeNormal"},
        TelescopeResultsBorder = {link = "TelescopeNormal"},
        TelescopePreviewBorder = {link = "TelescopeNormal"},
        TelescopeMatching = {link = "GruvllamaBlue"},
        TelescopePromptPrefix = {link = "GruvllamaRed"},
        TelescopePrompt = {link = "TelescopeNormal"},
        CmpItemAbbr = {link = "GruvllamaFg0"},
        CmpItemAbbrDeprecated = {link = "GruvllamaFg1"},
        CmpItemAbbrMatch = {link = "GruvllamaBlueBold"},
        CmpItemAbbrMatchFuzzy = {link = "GruvllamaBlueUnderline"},
        CmpItemMenu = {link = "GruvllamaGray"},
        CmpItemKindText = {link = "GruvllamaOrange"},
        CmpItemKindVariable = {link = "GruvllamaOrange"},
        CmpItemKindMethod = {link = "GruvllamaBlue"},
        CmpItemKindFunction = {link = "GruvllamaBlue"},
        CmpItemKindConstructor = {link = "GruvllamaYellow"},
        CmpItemKindUnit = {link = "GruvllamaBlue"},
        CmpItemKindField = {link = "GruvllamaBlue"},
        CmpItemKindClass = {link = "GruvllamaYellow"},
        CmpItemKindInterface = {link = "GruvllamaYellow"},
        CmpItemKindModule = {link = "GruvllamaBlue"},
        CmpItemKindProperty = {link = "GruvllamaBlue"},
        CmpItemKindValue = {link = "GruvllamaOrange"},
        CmpItemKindEnum = {link = "GruvllamaYellow"},
        CmpItemKindOperator = {link = "GruvllamaYellow"},
        CmpItemKindKeyword = {link = "GruvllamaPurple"},
        CmpItemKindEvent = {link = "GruvllamaPurple"},
        CmpItemKindReference = {link = "GruvllamaPurple"},
        CmpItemKindColor = {link = "GruvllamaPurple"},
        CmpItemKindSnippet = {link = "GruvllamaGreen"},
        CmpItemKindFile = {link = "GruvllamaBlue"},
        CmpItemKindFolder = {link = "GruvllamaBlue"},
        CmpItemKindEnumMember = {link = "GruvllamaAqua"},
        CmpItemKindConstant = {link = "GruvllamaOrange"},
        CmpItemKindStruct = {link = "GruvllamaYellow"},
        CmpItemKindTypeParameter = {link = "GruvllamaYellow"},
        diffAdded = {link = "DiffAdd"},
        diffRemoved = {link = "DiffDelete"},
        diffChanged = {link = "DiffChange"},
        diffFile = {link = "GruvllamaOrange"},
        diffNewFile = {link = "GruvllamaYellow"},
        diffOldFile = {link = "GruvllamaOrange"},
        diffLine = {link = "GruvllamaBlue"},
        diffIndexLine = {link = "diffChanged"},
        NavicIconsFile = {link = "GruvllamaBlue"},
        NavicIconsModule = {link = "GruvllamaOrange"},
        NavicIconsNamespace = {link = "GruvllamaBlue"},
        NavicIconsPackage = {link = "GruvllamaAqua"},
        NavicIconsClass = {link = "GruvllamaYellow"},
        NavicIconsMethod = {link = "GruvllamaBlue"},
        NavicIconsProperty = {link = "GruvllamaAqua"},
        NavicIconsField = {link = "GruvllamaPurple"},
        NavicIconsConstructor = {link = "GruvllamaBlue"},
        NavicIconsEnum = {link = "GruvllamaPurple"},
        NavicIconsInterface = {link = "GruvllamaGreen"},
        NavicIconsFunction = {link = "GruvllamaBlue"},
        NavicIconsVariable = {link = "GruvllamaPurple"},
        NavicIconsConstant = {link = "GruvllamaOrange"},
        NavicIconsString = {link = "GruvllamaGreen"},
        NavicIconsNumber = {link = "GruvllamaOrange"},
        NavicIconsBoolean = {link = "GruvllamaOrange"},
        NavicIconsArray = {link = "GruvllamaOrange"},
        NavicIconsObject = {link = "GruvllamaOrange"},
        NavicIconsKey = {link = "GruvllamaAqua"},
        NavicIconsNull = {link = "GruvllamaOrange"},
        NavicIconsEnumMember = {link = "GruvllamaYellow"},
        NavicIconsStruct = {link = "GruvllamaPurple"},
        NavicIconsEvent = {link = "GruvllamaYellow"},
        NavicIconsOperator = {link = "GruvllamaRed"},
        NavicIconsTypeParameter = {link = "GruvllamaRed"},
        NavicText = {link = "GruvllamaWhite"},
        NavicSeparator = {link = "GruvllamaWhite"},
        htmlTag = {link = "GruvllamaAquaBold"},
        htmlEndTag = {link = "GruvllamaAquaBold"},
        htmlTagName = {link = "GruvllamaBlue"},
        htmlArg = {link = "GruvllamaOrange"},
        htmlTagN = {link = "GruvllamaFg1"},
        htmlSpecialTagName = {link = "GruvllamaBlue"},
        htmlLink = {fg = colors.fg4, underline = config.underline},
        htmlSpecialChar = {link = "GruvllamaRed"},
        htmlBold = {fg = colors.fg0, bg = colors.bg0, bold = config.bold},
        htmlBoldUnderline = {
            fg = colors.fg0,
            bg = colors.bg0,
            bold = config.bold,
            underline = config.underline
        },
        htmlBoldItalic = {
            fg = colors.fg0,
            bg = colors.bg0,
            bold = config.bold,
            italic = true
        },
        htmlBoldUnderlineItalic = {
            fg = colors.fg0,
            bg = colors.bg0,
            bold = config.bold,
            italic = true,
            underline = config.underline
        },
        htmlUnderline = {
            fg = colors.fg0,
            bg = colors.bg0,
            underline = config.underline
        },
        htmlUnderlineItalic = {
            fg = colors.fg0,
            bg = colors.bg0,
            italic = true,
            underline = config.underline
        },
        htmlItalic = {fg = colors.fg0, bg = colors.bg0, italic = true},
        xmlTag = {link = "GruvllamaAquaBold"},
        xmlEndTag = {link = "GruvllamaAquaBold"},
        xmlTagName = {link = "GruvllamaBlue"},
        xmlEqual = {link = "GruvllamaBlue"},
        docbkKeyword = {link = "GruvllamaAquaBold"},
        xmlDocTypeDecl = {link = "GruvllamaGray"},
        xmlDocTypeKeyword = {link = "GruvllamaPurple"},
        xmlCdataStart = {link = "GruvllamaGray"},
        xmlCdataCdata = {link = "GruvllamaPurple"},
        dtdFunction = {link = "GruvllamaGray"},
        dtdTagName = {link = "GruvllamaPurple"},
        xmlAttrib = {link = "GruvllamaOrange"},
        xmlProcessingDelim = {link = "GruvllamaGray"},
        dtdParamEntityPunct = {link = "GruvllamaGray"},
        dtdParamEntityDPunct = {link = "GruvllamaGray"},
        xmlAttribPunct = {link = "GruvllamaGray"},
        xmlEntity = {link = "GruvllamaRed"},
        xmlEntityPunct = {link = "GruvllamaRed"},
        clojureKeyword = {link = "GruvllamaBlue"},
        clojureCond = {link = "GruvllamaOrange"},
        clojureSpecial = {link = "GruvllamaOrange"},
        clojureDefine = {link = "GruvllamaOrange"},
        clojureFunc = {link = "GruvllamaYellow"},
        clojureRepeat = {link = "GruvllamaYellow"},
        clojureCharacter = {link = "GruvllamaAqua"},
        clojureStringEscape = {link = "GruvllamaAqua"},
        clojureException = {link = "GruvllamaRed"},
        clojureRegexp = {link = "GruvllamaAqua"},
        clojureRegexpEscape = {link = "GruvllamaAqua"},
        clojureRegexpCharClass = {fg = colors.fg3, bold = config.bold},
        clojureRegexpMod = {link = "clojureRegexpCharClass"},
        clojureRegexpQuantifier = {link = "clojureRegexpCharClass"},
        clojureParen = {link = "GruvllamaFg3"},
        clojureAnonArg = {link = "GruvllamaYellow"},
        clojureVariable = {link = "GruvllamaBlue"},
        clojureMacro = {link = "GruvllamaOrange"},
        clojureMeta = {link = "GruvllamaYellow"},
        clojureDeref = {link = "GruvllamaYellow"},
        clojureQuote = {link = "GruvllamaYellow"},
        clojureUnquote = {link = "GruvllamaYellow"},
        cOperator = {link = "GruvllamaPurple"},
        cppOperator = {link = "GruvllamaPurple"},
        cStructure = {link = "GruvllamaOrange"},
        pythonBuiltin = {link = "GruvllamaOrange"},
        pythonBuiltinObj = {link = "GruvllamaOrange"},
        pythonBuiltinFunc = {link = "GruvllamaOrange"},
        pythonFunction = {link = "GruvllamaAqua"},
        pythonDecorator = {link = "GruvllamaRed"},
        pythonInclude = {link = "GruvllamaBlue"},
        pythonImport = {link = "GruvllamaBlue"},
        pythonRun = {link = "GruvllamaBlue"},
        pythonCoding = {link = "GruvllamaBlue"},
        pythonOperator = {link = "GruvllamaRed"},
        pythonException = {link = "GruvllamaRed"},
        pythonExceptions = {link = "GruvllamaPurple"},
        pythonBoolean = {link = "GruvllamaPurple"},
        pythonDot = {link = "GruvllamaFg3"},
        pythonConditional = {link = "GruvllamaRed"},
        pythonRepeat = {link = "GruvllamaRed"},
        pythonDottedName = {link = "GruvllamaGreenBold"},
        cssBraces = {link = "GruvllamaBlue"},
        cssFunctionName = {link = "GruvllamaYellow"},
        cssIdentifier = {link = "GruvllamaOrange"},
        cssClassName = {link = "GruvllamaGreen"},
        cssColor = {link = "GruvllamaBlue"},
        cssSelectorOp = {link = "GruvllamaBlue"},
        cssSelectorOp2 = {link = "GruvllamaBlue"},
        cssImportant = {link = "GruvllamaGreen"},
        cssVendor = {link = "GruvllamaFg1"},
        cssTextProp = {link = "GruvllamaAqua"},
        cssAnimationProp = {link = "GruvllamaAqua"},
        cssUIProp = {link = "GruvllamaYellow"},
        cssTransformProp = {link = "GruvllamaAqua"},
        cssTransitionProp = {link = "GruvllamaAqua"},
        cssPrintProp = {link = "GruvllamaAqua"},
        cssPositioningProp = {link = "GruvllamaYellow"},
        cssBoxProp = {link = "GruvllamaAqua"},
        cssFontDescriptorProp = {link = "GruvllamaAqua"},
        cssFlexibleBoxProp = {link = "GruvllamaAqua"},
        cssBorderOutlineProp = {link = "GruvllamaAqua"},
        cssBackgroundProp = {link = "GruvllamaAqua"},
        cssMarginProp = {link = "GruvllamaAqua"},
        cssListProp = {link = "GruvllamaAqua"},
        cssTableProp = {link = "GruvllamaAqua"},
        cssFontProp = {link = "GruvllamaAqua"},
        cssPaddingProp = {link = "GruvllamaAqua"},
        cssDimensionProp = {link = "GruvllamaAqua"},
        cssRenderProp = {link = "GruvllamaAqua"},
        cssColorProp = {link = "GruvllamaAqua"},
        cssGeneratedContentProp = {link = "GruvllamaAqua"},
        javaScriptBraces = {link = "GruvllamaFg1"},
        javaScriptFunction = {link = "GruvllamaAqua"},
        javaScriptIdentifier = {link = "GruvllamaRed"},
        javaScriptMember = {link = "GruvllamaBlue"},
        javaScriptNumber = {link = "GruvllamaPurple"},
        javaScriptNull = {link = "GruvllamaPurple"},
        javaScriptParens = {link = "GruvllamaFg3"},
        typescriptReserved = {link = "GruvllamaAqua"},
        typescriptLabel = {link = "GruvllamaAqua"},
        typescriptFuncKeyword = {link = "GruvllamaAqua"},
        typescriptIdentifier = {link = "GruvllamaOrange"},
        typescriptBraces = {link = "GruvllamaFg1"},
        typescriptEndColons = {link = "GruvllamaFg1"},
        typescriptDOMObjects = {link = "GruvllamaFg1"},
        typescriptAjaxMethods = {link = "GruvllamaFg1"},
        typescriptLogicSymbols = {link = "GruvllamaFg1"},
        typescriptDocSeeTag = {link = "Comment"},
        typescriptDocParam = {link = "Comment"},
        typescriptDocTags = {link = "vimCommentTitle"},
        typescriptGlobalObjects = {link = "GruvllamaFg1"},
        typescriptParens = {link = "GruvllamaFg3"},
        typescriptOpSymbols = {link = "GruvllamaFg3"},
        typescriptHtmlElemProperties = {link = "GruvllamaFg1"},
        typescriptNull = {link = "GruvllamaPurple"},
        typescriptInterpolationDelimiter = {link = "GruvllamaAqua"},
        purescriptModuleKeyword = {link = "GruvllamaAqua"},
        purescriptModuleName = {link = "GruvllamaFg1"},
        purescriptWhere = {link = "GruvllamaAqua"},
        purescriptDelimiter = {link = "GruvllamaFg4"},
        purescriptType = {link = "GruvllamaFg1"},
        purescriptImportKeyword = {link = "GruvllamaAqua"},
        purescriptHidingKeyword = {link = "GruvllamaAqua"},
        purescriptAsKeyword = {link = "GruvllamaAqua"},
        purescriptStructure = {link = "GruvllamaAqua"},
        purescriptOperator = {link = "GruvllamaBlue"},
        purescriptTypeVar = {link = "GruvllamaFg1"},
        purescriptConstructor = {link = "GruvllamaFg1"},
        purescriptFunction = {link = "GruvllamaFg1"},
        purescriptConditional = {link = "GruvllamaOrange"},
        purescriptBacktick = {link = "GruvllamaOrange"},
        coffeeExtendedOp = {link = "GruvllamaFg3"},
        coffeeSpecialOp = {link = "GruvllamaFg3"},
        coffeeCurly = {link = "GruvllamaOrange"},
        coffeeParen = {link = "GruvllamaFg3"},
        coffeeBracket = {link = "GruvllamaOrange"},
        rubyStringDelimiter = {link = "GruvllamaGreen"},
        rubyInterpolationDelimiter = {link = "GruvllamaAqua"},
        rubyDefinedOperator = {link = "rubyKeyword"},
        objcTypeModifier = {link = "GruvllamaRed"},
        objcDirective = {link = "GruvllamaBlue"},
        goDirective = {link = "GruvllamaAqua"},
        goConstants = {link = "GruvllamaPurple"},
        goDeclaration = {link = "GruvllamaRed"},
        goDeclType = {link = "GruvllamaBlue"},
        goBuiltins = {link = "GruvllamaOrange"},
        luaIn = {link = "GruvllamaRed"},
        luaFunction = {link = "GruvllamaAqua"},
        luaTable = {link = "GruvllamaOrange"},
        moonSpecialOp = {link = "GruvllamaFg3"},
        moonExtendedOp = {link = "GruvllamaFg3"},
        moonFunction = {link = "GruvllamaFg3"},
        moonObject = {link = "GruvllamaYellow"},
        javaAnnotation = {link = "GruvllamaBlue"},
        javaDocTags = {link = "GruvllamaAqua"},
        javaCommentTitle = {link = "vimCommentTitle"},
        javaParen = {link = "GruvllamaFg3"},
        javaParen1 = {link = "GruvllamaFg3"},
        javaParen2 = {link = "GruvllamaFg3"},
        javaParen3 = {link = "GruvllamaFg3"},
        javaParen4 = {link = "GruvllamaFg3"},
        javaParen5 = {link = "GruvllamaFg3"},
        javaOperator = {link = "GruvllamaOrange"},
        javaVarArg = {link = "GruvllamaGreen"},
        elixirDocString = {link = "Comment"},
        elixirStringDelimiter = {link = "GruvllamaGreen"},
        elixirInterpolationDelimiter = {link = "GruvllamaAqua"},
        elixirModuleDeclaration = {link = "GruvllamaYellow"},
        scalaNameDefinition = {link = "GruvllamaFg1"},
        scalaCaseFollowing = {link = "GruvllamaFg1"},
        scalaCapitalWord = {link = "GruvllamaFg1"},
        scalaTypeExtension = {link = "GruvllamaFg1"},
        scalaKeyword = {link = "GruvllamaRed"},
        scalaKeywordModifier = {link = "GruvllamaRed"},
        scalaSpecial = {link = "GruvllamaAqua"},
        scalaOperator = {link = "GruvllamaFg1"},
        scalaTypeDeclaration = {link = "GruvllamaYellow"},
        scalaTypeTypePostDeclaration = {link = "GruvllamaYellow"},
        scalaInstanceDeclaration = {link = "GruvllamaFg1"},
        scalaInterpolation = {link = "GruvllamaAqua"},
        markdownItalic = {fg = colors.fg3, italic = true},
        markdownBold = {fg = colors.fg3, bold = config.bold},
        markdownBoldItalic = {
            fg = colors.fg3,
            bold = config.bold,
            italic = true
        },
        markdownH1 = {link = "GruvllamaGreenBold"},
        markdownH2 = {link = "GruvllamaGreenBold"},
        markdownH3 = {link = "GruvllamaYellowBold"},
        markdownH4 = {link = "GruvllamaYellowBold"},
        markdownH5 = {link = "GruvllamaYellow"},
        markdownH6 = {link = "GruvllamaYellow"},
        markdownCode = {link = "GruvllamaAqua"},
        markdownCodeBlock = {link = "GruvllamaAqua"},
        markdownCodeDelimiter = {link = "GruvllamaAqua"},
        markdownBlockquote = {link = "GruvllamaGray"},
        markdownListMarker = {link = "GruvllamaGray"},
        markdownOrderedListMarker = {link = "GruvllamaGray"},
        markdownRule = {link = "GruvllamaGray"},
        markdownHeadingRule = {link = "GruvllamaGray"},
        markdownUrlDelimiter = {link = "GruvllamaFg3"},
        markdownLinkDelimiter = {link = "GruvllamaFg3"},
        markdownLinkTextDelimiter = {link = "GruvllamaFg3"},
        markdownHeadingDelimiter = {link = "GruvllamaOrange"},
        markdownUrl = {link = "GruvllamaPurple"},
        markdownUrlTitleDelimiter = {link = "GruvllamaGreen"},
        markdownLinkText = {fg = colors.gray, underline = config.underline},
        markdownIdDeclaration = {link = "markdownLinkText"},
        haskellType = {link = "GruvllamaBlue"},
        haskellIdentifier = {link = "GruvllamaAqua"},
        haskellSeparator = {link = "GruvllamaFg4"},
        haskellDelimiter = {link = "GruvllamaOrange"},
        haskellOperators = {link = "GruvllamaPurple"},
        haskellBacktick = {link = "GruvllamaOrange"},
        haskellStatement = {link = "GruvllamaPurple"},
        haskellConditional = {link = "GruvllamaPurple"},
        haskellLet = {link = "GruvllamaRed"},
        haskellDefault = {link = "GruvllamaRed"},
        haskellWhere = {link = "GruvllamaRed"},
        haskellBottom = {link = "GruvllamaRedBold"},
        haskellImportKeywords = {link = "GruvllamaPurpleBold"},
        haskellDeclKeyword = {link = "GruvllamaOrange"},
        haskellDecl = {link = "GruvllamaOrange"},
        haskellDeriving = {link = "GruvllamaPurple"},
        haskellAssocType = {link = "GruvllamaAqua"},
        haskellNumber = {link = "GruvllamaAqua"},
        haskellPragma = {link = "GruvllamaRedBold"},
        haskellTH = {link = "GruvllamaAquaBold"},
        haskellForeignKeywords = {link = "GruvllamaGreen"},
        haskellKeyword = {link = "GruvllamaRed"},
        haskellFloat = {link = "GruvllamaAqua"},
        haskellInfix = {link = "GruvllamaPurple"},
        haskellQuote = {link = "GruvllamaGreenBold"},
        haskellShebang = {link = "GruvllamaYellowBold"},
        haskellLiquid = {link = "GruvllamaPurpleBold"},
        haskellQuasiQuoted = {link = "GruvllamaBlueBold"},
        haskellRecursiveDo = {link = "GruvllamaPurple"},
        haskellQuotedType = {link = "GruvllamaRed"},
        haskellPreProc = {link = "GruvllamaFg4"},
        haskellTypeRoles = {link = "GruvllamaRedBold"},
        haskellTypeForall = {link = "GruvllamaRed"},
        haskellPatternKeyword = {link = "GruvllamaBlue"},
        jsonKeyword = {link = "GruvllamaGreen"},
        jsonQuote = {link = "GruvllamaGreen"},
        jsonBraces = {link = "GruvllamaFg1"},
        jsonString = {link = "GruvllamaFg1"},
        mailQuoted1 = {link = "GruvllamaAqua"},
        mailQuoted2 = {link = "GruvllamaPurple"},
        mailQuoted3 = {link = "GruvllamaYellow"},
        mailQuoted4 = {link = "GruvllamaGreen"},
        mailQuoted5 = {link = "GruvllamaRed"},
        mailQuoted6 = {link = "GruvllamaOrange"},
        mailSignature = {link = "Comment"},
        csBraces = {link = "GruvllamaFg1"},
        csEndColon = {link = "GruvllamaFg1"},
        csLogicSymbols = {link = "GruvllamaFg1"},
        csParens = {link = "GruvllamaFg3"},
        csOpSymbols = {link = "GruvllamaFg3"},
        csInterpolationDelimiter = {link = "GruvllamaFg3"},
        csInterpolationAlignDel = {link = "GruvllamaAquaBold"},
        csInterpolationFormat = {link = "GruvllamaAqua"},
        csInterpolationFormatDel = {link = "GruvllamaAquaBold"},
        rustSigil = {link = "GruvllamaOrange"},
        rustEscape = {link = "GruvllamaAqua"},
        rustStringContinuation = {link = "GruvllamaAqua"},
        rustEnum = {link = "GruvllamaAqua"},
        rustStructure = {link = "GruvllamaAqua"},
        rustModPathSep = {link = "GruvllamaFg2"},
        rustCommentLineDoc = {link = "Comment"},
        rustDefault = {link = "GruvllamaAqua"},
        ocamlOperator = {link = "GruvllamaFg1"},
        ocamlKeyChar = {link = "GruvllamaOrange"},
        ocamlArrow = {link = "GruvllamaOrange"},
        ocamlInfixOpKeyword = {link = "GruvllamaRed"},
        ocamlConstructor = {link = "GruvllamaOrange"},
        LspSagaCodeActionTitle = {link = "Title"},
        LspSagaCodeActionBorder = {link = "GruvllamaFg1"},
        LspSagaCodeActionContent = {fg = colors.green, bold = config.bold},
        LspSagaLspFinderBorder = {link = "GruvllamaFg1"},
        LspSagaAutoPreview = {link = "GruvllamaOrange"},
        TargetWord = {fg = colors.blue, bold = config.bold},
        FinderSeparator = {link = "GruvllamaAqua"},
        LspSagaDefPreviewBorder = {link = "GruvllamaBlue"},
        LspSagaHoverBorder = {link = "GruvllamaOrange"},
        LspSagaRenameBorder = {link = "GruvllamaBlue"},
        LspSagaDiagnosticSource = {link = "GruvllamaOrange"},
        LspSagaDiagnosticBorder = {link = "GruvllamaPurple"},
        LspSagaDiagnosticHeader = {link = "GruvllamaGreen"},
        LspSagaSignatureHelpBorder = {link = "GruvllamaGreen"},
        SagaShadow = {link = "GruvllamaBg0"},
        DashboardShortCut = {link = "GruvllamaOrange"},
        DashboardHeader = {link = "GruvllamaAqua"},
        DashboardCenter = {link = "GruvllamaYellow"},
        DashboardFooter = {fg = colors.purple, italic = true},
        MasonHighlight = {link = "GruvllamaAqua"},
        MasonHighlightBlock = {fg = colors.bg0, bg = colors.blue},
        MasonHighlightBlockBold = {
            fg = colors.bg0,
            bg = colors.blue,
            bold = true
        },
        MasonHighlightSecondary = {fg = colors.yellow},
        MasonHighlightBlockSecondary = {fg = colors.bg0, bg = colors.yellow},
        MasonHighlightBlockBoldSecondary = {
            fg = colors.bg0,
            bg = colors.yellow,
            bold = true
        },
        MasonHeader = {link = "MasonHighlightBlockBoldSecondary"},
        MasonHeaderSecondary = {link = "MasonHighlightBlockBold"},
        MasonMuted = {fg = colors.fg4},
        MasonMutedBlock = {fg = colors.bg0, bg = colors.fg4},
        MasonMutedBlockBold = {fg = colors.bg0, bg = colors.fg4, bold = true},
        LspInlayHint = {link = "comment"},
        CarbonFile = {link = "GruvllamaFg1"},
        CarbonExe = {link = "GruvllamaYellow"},
        CarbonSymlink = {link = "GruvllamaAqua"},
        CarbonBrokenSymlink = {link = "GruvllamaRed"},
        CarbonIndicator = {link = "GruvllamaGray"},
        CarbonDanger = {link = "GruvllamaRed"},
        CarbonPending = {link = "GruvllamaYellow"},
        NoiceCursor = {link = "TermCursor"},
        NotifyDEBUGBorder = {link = "GruvllamaBlue"},
        NotifyDEBUGIcon = {link = "GruvllamaBlue"},
        NotifyDEBUGTitle = {link = "GruvllamaBlue"},
        NotifyERRORBorder = {link = "GruvllamaRed"},
        NotifyERRORIcon = {link = "GruvllamaRed"},
        NotifyERRORTitle = {link = "GruvllamaRed"},
        NotifyINFOBorder = {link = "GruvllamaAqua"},
        NotifyINFOIcon = {link = "GruvllamaAqua"},
        NotifyINFOTitle = {link = "GruvllamaAqua"},
        NotifyTRACEBorder = {link = "GruvllamaGreen"},
        NotifyTRACEIcon = {link = "GruvllamaGreen"},
        NotifyTRACETitle = {link = "GruvllamaGreen"},
        NotifyWARNBorder = {link = "GruvllamaYellow"},
        NotifyWARNIcon = {link = "GruvllamaYellow"},
        NotifyWARNTitle = {link = "GruvllamaYellow"},
        IlluminatedWordText = {link = "LspReferenceText"},
        IlluminatedWordRead = {link = "LspReferenceRead"},
        IlluminatedWordWrite = {link = "LspReferenceWrite"},
        TSRainbowRed = {fg = colors.red},
        TSRainbowOrange = {fg = colors.orange},
        TSRainbowYellow = {fg = colors.yellow},
        TSRainbowGreen = {fg = colors.green},
        TSRainbowBlue = {fg = colors.blue},
        TSRainbowViolet = {fg = colors.purple},
        TSRainbowCyan = {fg = colors.cyan},
        DapBreakpointSymbol = {fg = colors.red, bg = colors.bg1},
        DapStoppedSymbol = {fg = colors.green, bg = colors.bg1},
        DapUIBreakpointsCurrentLine = {link = "GruvllamaYellow"},
        DapUIBreakpointsDisabledLine = {link = "GruvllamaGray"},
        DapUIBreakpointsInfo = {link = "GruvllamaAqua"},
        DapUIBreakpointsLine = {link = "GruvllamaYellow"},
        DapUIBreakpointsPath = {link = "GruvllamaBlue"},
        DapUICurrentFrameName = {link = "GruvllamaPurple"},
        DapUIDecoration = {link = "GruvllamaPurple"},
        DapUIEndofBuffer = {link = "GruvllamaBg2"},
        DapUIFloatBorder = {link = "GruvllamaAqua"},
        DapUILineNumber = {link = "GruvllamaYellow"},
        DapUIModifiedValue = {link = "GruvllamaRed"},
        DapUIPlayPause = {fg = colors.green, bg = colors.bg1},
        DapUIRestart = {fg = colors.green, bg = colors.bg1},
        DapUIScope = {link = "GruvllamaBlue"},
        DapUISource = {link = "GruvllamaFg1"},
        DapUIStepBack = {fg = colors.blue, bg = colors.bg1},
        DapUIStepInto = {fg = colors.blue, bg = colors.bg1},
        DapUIStepOut = {fg = colors.blue, bg = colors.bg1},
        DapUIStepOver = {fg = colors.blue, bg = colors.bg1},
        DapUIStop = {fg = colors.red, bg = colors.bg1},
        DapUIStoppedThread = {link = "GruvllamaBlue"},
        DapUIThread = {link = "GruvllamaBlue"},
        DapUIType = {link = "GruvllamaOrange"},
        DapUIUnavailable = {link = "GruvllamaGray"},
        DapUIWatchesEmpty = {link = "GruvllamaGray"},
        DapUIWatchesError = {link = "GruvllamaRed"},
        DapUIWatchesValue = {link = "GruvllamaYellow"},
        DapUIWinSelect = {link = "GruvllamaYellow"},
        NeogitDiffDelete = {link = "DiffDelete"},
        NeogitDiffAdd = {link = "DiffAdd"},
        NeogitHunkHeader = {link = "WinBar"},
        NeogitHunkHeaderHighlight = {link = "WinBarNC"},
        DiffviewStatusModified = {link = "GruvllamaGreenBold"},
        DiffviewFilePanelInsertions = {link = "GruvllamaGreenBold"},
        DiffviewFilePanelDeletions = {link = "GruvllamaRedBold"},
        ["@comment"] = {link = "Comment"},
        ["@none"] = {bg = "NONE", fg = "NONE"},
        ["@preproc"] = {link = "PreProc"},
        ["@define"] = {link = "Define"},
        ["@operator"] = {link = "Operator"},
        ["@punctuation.delimiter"] = {link = "Delimiter"},
        ["@punctuation.bracket"] = {link = "Delimiter"},
        ["@punctuation.special"] = {link = "Delimiter"},
        ["@string"] = {link = "String"},
        ["@string.regex"] = {link = "String"},
        ["@string.escape"] = {link = "SpecialChar"},
        ["@string.special"] = {link = "SpecialChar"},
        ["@character"] = {link = "Character"},
        ["@character.special"] = {link = "SpecialChar"},
        ["@boolean"] = {link = "Boolean"},
        ["@number"] = {link = "Number"},
        ["@float"] = {link = "Float"},
        ["@function"] = {link = "Function"},
        ["@function.builtin"] = {link = "Special"},
        ["@function.call"] = {link = "Function"},
        ["@function.macro"] = {link = "Macro"},
        ["@method"] = {link = "Function"},
        ["@method.call"] = {link = "Function"},
        ["@constructor"] = {link = "Special"},
        ["@parameter"] = {link = "Identifier"},
        ["@keyword"] = {link = "Keyword"},
        ["@keyword.function"] = {link = "Keyword"},
        ["@keyword.operator"] = {link = "GruvllamaRed"},
        ["@keyword.return"] = {link = "Keyword"},
        ["@conditional"] = {link = "Conditional"},
        ["@repeat"] = {link = "Repeat"},
        ["@debug"] = {link = "Debug"},
        ["@label"] = {link = "Label"},
        ["@include"] = {link = "Include"},
        ["@exception"] = {link = "Exception"},
        ["@type"] = {link = "Type"},
        ["@type.builtin"] = {link = "Type"},
        ["@type.definition"] = {link = "Typedef"},
        ["@type.qualifier"] = {link = "Type"},
        ["@storageclass"] = {link = "StorageClass"},
        ["@attribute"] = {link = "PreProc"},
        ["@field"] = {link = "Identifier"},
        ["@property"] = {link = "Identifier"},
        ["@variable"] = {link = "GruvllamaFg1"},
        ["@variable.builtin"] = {link = "Special"},
        ["@constant"] = {link = "Constant"},
        ["@constant.builtin"] = {link = "Special"},
        ["@constant.macro"] = {link = "Define"},
        ["@namespace"] = {link = "GruvllamaFg1"},
        ["@symbol"] = {link = "Identifier"},
        ["@text"] = {link = "GruvllamaFg1"},
        ["@text.strong"] = {bold = config.bold},
        ["@text.emphasis"] = {italic = config.italic.emphasis},
        ["@text.underline"] = {underline = config.underline},
        ["@text.strike"] = {strikethrough = config.strikethrough},
        ["@text.title"] = {link = "Title"},
        ["@text.literal"] = {link = "String"},
        ["@text.uri"] = {link = "Underlined"},
        ["@text.math"] = {link = "Special"},
        ["@text.environment"] = {link = "Macro"},
        ["@text.environment.name"] = {link = "Type"},
        ["@text.reference"] = {link = "Constant"},
        ["@text.todo"] = {link = "Todo"},
        ["@text.note"] = {link = "SpecialComment"},
        ["@text.note.comment"] = {fg = colors.purple, bold = config.bold},
        ["@text.warning"] = {link = "WarningMsg"},
        ["@text.danger"] = {link = "ErrorMsg"},
        ["@text.danger.comment"] = {
            fg = colors.fg0,
            bg = colors.red,
            bold = config.bold
        },
        ["@text.diff.add"] = {link = "diffAdded"},
        ["@text.diff.delete"] = {link = "diffRemoved"},
        ["@tag"] = {link = "Tag"},
        ["@tag.attribute"] = {link = "Identifier"},
        ["@tag.delimiter"] = {link = "Delimiter"},
        ["@punctuation"] = {link = "Delimiter"},
        ["@macro"] = {link = "Macro"},
        ["@structure"] = {link = "Structure"},
        ["@lsp.type.class"] = {link = "@type"},
        ["@lsp.type.comment"] = {}, -- do not overwrite comments
        ["@lsp.type.decorator"] = {link = "@macro"},
        ["@lsp.type.enum"] = {link = "@type"},
        ["@lsp.type.enumMember"] = {link = "@constant"},
        ["@lsp.type.function"] = {link = "@function"},
        ["@lsp.type.interface"] = {link = "@constructor"},
        ["@lsp.type.macro"] = {link = "@macro"},
        ["@lsp.type.method"] = {link = "@method"},
        ["@lsp.type.namespace"] = {link = "@namespace"},
        ["@lsp.type.parameter"] = {link = "@parameter"},
        ["@lsp.type.property"] = {link = "@property"},
        ["@lsp.type.struct"] = {link = "@type"},
        ["@lsp.type.type"] = {link = "@type"},
        ["@lsp.type.typeParameter"] = {link = "@type.definition"},
        ["@lsp.type.variable"] = {link = "@variable"}
    }

    for group, hl in pairs(config.overrides) do
        if groups[group] then
            -- "link" should not mix with other configs (:h hi-link)
            groups[group].link = nil
        end

        groups[group] = vim.tbl_extend("force", groups[group] or {}, hl)
    end

    return groups
end

---@param config GruvllamaConfig?
Gruvllama.setup = function(config)
    Gruvllama.config = vim.tbl_deep_extend("force", gruvllama.config,
                                           config or {})
end

--- main load function
Gruvllama.load = function()
    if vim.version().minor < 8 then
        vim.notify_once("gruvllama.nvim: you must use neovim 0.8 or higher")
        return
    end

    -- reset colors
    if vim.g.colors_name then vim.cmd.hi("clear") end
    vim.g.colors_name = "gruvllama"
    vim.o.termguicolors = true

    local groups = get_groups()

    -- add highlights
    for group, settings in pairs(groups) do
        vim.api.nvim_set_hl(0, group, settings)
    end
end

return Gruvllama
